openapi: 3.0.3
info:
  title: Lost and Found API
  description: |
    Lost and found
  termsOfService: http://swagger.io/terms/
  contact:
    email: lost@found.io
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: workflow-checks
    description: Checks that occur during the workflow of a crate
  - name: tracking
    description: Tracking crates
paths:
  /station/check:
    post:
      tags:
        - workflow-checks
      summary: Check if a crate is in the correct workflow step
      description: Check if a crate is in the correct workflow step
      operationId: checkWorkflowStep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckStation'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStationResponse'          
        '400':
          description: Invalid input
          
  /tracking/events/start:
    post:
      tags:
        - tracking
      summary: Report a start event
      description: |
        Report the start data matching an arrival of a crate at a work station
      operationId: createTrackingStart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackingStartRequest'
      responses:
        '204':
          description: Successful operation
        
  /tracking/events/end:  
    post:
      tags:
        - tracking
      summary: Report an end event
      description: |
        Report the end data matching the leaving of a crate at a work station
      operationId: createTrackingEnd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackingEndRequest'
      responses:
        '204':
          description: Successful operation
          
  /tracking/events/aggregate:
    get:
      tags:
        - tracking
      summary: Get the aggregated tracking data
      description: |
        Get an aggregate of the average time per station
      operationId: getTrackingAggregate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingAggregateResponse'
  
  
  
components:
  schemas:
    CheckStation:
      type: object
      required:
        - orderId
        - station
      properties:
        orderId:
          type: string
          example: A_2663577
        station:
          type: integer
          example: 1
    
    CheckStationResponse:
      type: object
      required:
        - isAtCorrectStation
        - expectedStation
      properties:
        isAtCorrectStation:
          type: boolean
        expectedStation:
          type: integer
          example: 1
          
    CreateTrackingStartRequest:
      type: object
      required:
        - orderId
        - stationId
        - startTime
      properties:
        orderId:
          type: string
          example: A_123456789
        stationId:
          type: integer
        startTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28.000Z'
        
    CreateTrackingEndRequest:
      type: object
      required:
        - orderId
        - stationId
        - endTime
      properties:
        orderId:
          type: string
          example: A_123456789
        stationId:
          type: integer
        endTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28.000Z'
        
    TrackingAggregateResponse:
      type: object
      required:
        - stationAggregates
      properties:
        stationAggregates:
          type: array
          items:
            $ref: '#/components/schemas/TrackingStationAggregate'
            
            
    TrackingStationAggregate:
      type: object
      required:
        - stationId
        - stationName
        - stationThroughput
      properties:
        stationId:
          type: integer
        stationName:
          type: string
        stationThroughput:
          type: integer
          description: The throughput in milliseconds